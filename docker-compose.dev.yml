services:
  db:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_NAME:-qvote}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5440:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER:-postgres}" ]
      interval: 5s
      timeout: 5s
      retries: 5

  test-db:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_USER: test
      POSTGRES_PASSWORD: test
      POSTGRES_DB: test
    ports:
      - "5433:5432"
    tmpfs:
      - /var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U test" ]
      interval: 1s
      timeout: 2s
      retries: 5

  app:
    build: .
    restart: always
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "${PORT:-8443}:8443"
      - "9229:9229"
    environment:
      - SLACK_CLIENT_ID=${SLACK_CLIENT_ID}
      - SLACK_CLIENT_SECRET=${SLACK_CLIENT_SECRET}
      - SLACK_REDIRECT_URI=${SLACK_REDIRECT_URI}
      - PORT=${PORT:-8080}
      - USE_HTTPS=${USE_HTTPS:-false}
      - DATABASE_URL=${DATABASE_URL:-postgresql://postgres:postgres@db:5432/qvote}
    # command: >
    #   sh -c "deno task prisma:generate && deno run --inspect=0.0.0.0:9229 --allow-net --allow-env --allow-read --allow-run --allow-ffi --watch main.ts"
    volumes:
      - .:/app
      - deno-cache:/home/deno/.cache/deno
      - .env:/app/.env
      - ./certs:/app/certs

volumes:
  postgres_data:
  deno-cache:
