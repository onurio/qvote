name: Deno CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Setup repo
        uses: actions/checkout@v4

      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v2.2.3

      - name: Verify formatting
        run: deno task fmt:check
      
      - name: Run linter
        run: deno task lint

      - name: Generate Prisma client
        run: deno task prisma:generate

      - name: Test database migrations
        run: deno run -A npm:prisma@latest migrate deploy
        env:
          DATABASE_URL: postgresql://test:test@localhost:5432/test

      - name: Run type check
        run: deno task check

      - name: Run tests
        run: deno task test
        env:
          DB_HOST: localhost
          DB_PORT: 5432
          DB_USER: test
          DB_PASSWORD: test
          DB_NAME: test
          DATABASE_URL: postgresql://test:test@localhost:5432/test
          SLACK_CLIENT_ID: "test_client_id"
          SLACK_CLIENT_SECRET: "test_client_secret"
          SLACK_REDIRECT_URI: "https://example.com/oauth/callback"
          PORT: "8443"
          USE_HTTPS: "false"
          CERT_FILE: "certs/cert.pem"
          KEY_FILE: "certs/key.pem"

  build:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Setup repo
        uses: actions/checkout@v4

      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v2.2.3

      - name: Build Docker image
        run: docker build -t qvote:${{ github.sha }} .

      # Additional deployment steps could go here